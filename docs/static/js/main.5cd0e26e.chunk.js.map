{"version":3,"sources":["components/ListItem.js","components/List.js","components/ListAdd.js","hooks/useForm.js","components/todoReducer.js","TodoListApp.js","index.js"],"names":["ListItem","todo","index","handleDelete","handleToggle","className","onClick","id","done","tarea","List","todos","map","i","ListAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","type","autoComplete","onChange","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoListApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cd0e26e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const ListItem = ({todo, index, handleDelete, handleToggle}) => {\r\n    return (\r\n        <div className = 'list-item' key = {todo.id}>\r\n            <strong> {index} </strong>\r\n            <p \r\n                onClick = {()=> handleToggle(todo.id)}\r\n                className = {todo.done ? 'complete' : ''}\r\n            > \r\n                {todo.tarea}\r\n            </p>\r\n            <button \r\n                className = 'btn btn-danger'\r\n                onClick = {()=> handleDelete(todo.id)}\r\n            > \r\n                Delete\r\n            </button>    \r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { ListItem } from './ListItem';\r\n\r\nexport const List = ({todos, handleDelete, handleToggle}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                todos.map((todo, i) => {\r\n                    return(\r\n                        <ListItem \r\n                            todo = {todo}\r\n                            index = {i}\r\n                            key = {todo.id}\r\n                            handleDelete = {handleDelete}\r\n                            handleToggle = {handleToggle}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nexport const ListAdd = ({handleAddTodo}) => {\r\n\r\n    const [{tarea}, handleInputChange, reset] = useForm({\r\n        tarea : ''\r\n    })\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(tarea.trim().length <= 1){\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            tarea: tarea,\r\n            done: false,\r\n        }\r\n\r\n        handleAddTodo(newTodo);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className= 'agregar'>\r\n            <form onSubmit = {handleSubmit}>\r\n                <input \r\n                    className = 'form-control'\r\n                    name = \"tarea\"\r\n                    placeholder = \"Nueva Tarea\"\r\n                    type= \"text\"\r\n                    autoComplete = 'off'\r\n                    onChange = {handleInputChange}\r\n                    value = {tarea}\r\n                />\r\n                <br></br>\r\n                <button type='submit' className = 'btn btn-primary'> Add </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","export const todoReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n        case 'toggle':\r\n            return state.map( todo => \r\n                (todo.id === action.payload)\r\n                ? {...todo, done: !todo.done}\r\n                : todo\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport React, {useEffect, useReducer} from 'react'\r\nimport { List } from './components/List';\r\nimport { ListAdd } from './components/ListAdd';\r\nimport { ListItem } from './components/ListItem';\r\nimport { todoReducer } from './components/todoReducer';\r\n\r\nconst init = () =>{\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\nexport const TodoListApp = () => {\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const handleDelete = (todoId) =>{\r\n        const action = {\r\n            type : 'delete',\r\n            payload: todoId,\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    const handleToggle = (todoId) => {\r\n        const action = {\r\n            type : 'toggle',\r\n            payload : todoId,\r\n        }\r\n        dispatch(action);\r\n    };\r\n\r\n    const handleAddTodo = (newTodo) =>{\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>ToDo List</h1>\r\n            <hr/>\r\n\r\n            <div className = 'row' >\r\n                \r\n                <div className = 'col-6'>\r\n                    <List \r\n                        todos = {todos} \r\n                        handleDelete = {handleDelete}\r\n                        handleToggle = {handleToggle}\r\n                    />\r\n                </div>\r\n\r\n                <div className = 'col-1'></div>\r\n                \r\n                <div className = 'col-5'>\r\n                    <h3> Add new task </h3>\r\n                    <ListAdd handleAddTodo = {handleAddTodo}/>\r\n                \r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { TodoListApp } from './TodoListApp';\n\n\nReactDOM.render(\n   <TodoListApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}